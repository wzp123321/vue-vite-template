<template>
	<view class="">
		<view class="nvue-page-head" ref="pagehead" id="pagehead">
			<view class="navbar" ref="navbar">
				<!--  #ifdef  APP-NVUE -->
				<uni-nav-bar :fixed="false" :rightIconBool="true" :status-bar="true" right-icon="plus" @clickRight="webSocket.queryUsers"
				 title="好友列表" background-color="#ebebeb" titleStyle="font-size: 34rpx; font-weight: 500;"></uni-nav-bar>
				<!--  #endif -->
				<!--  #ifndef  APP-NVUE -->
				<uni-nav-bar :fixed="false" :rightIconBool="true" :leftIconBool="true" :status-bar="true" left-icon="plus"
				 @clickLeft="webSocket.queryUsers" title="好友列表" background-color="#ebebeb" titleStyle="font-size: 34rpx; font-weight: 500;"></uni-nav-bar>
				<!--  #endif -->
			</view>
			<view class="navbar" ref="searchbar">
				<uni-search-bar @input="searchInput(friendList,groupList,$event)" :searchTranslateX="searchTranslateX" :radius="6"
				 placeholder="搜索" class="navbar" bgColor="white" @searchBarClick="searchBarClick" @cancel="searchBarCancel"></uni-search-bar>
				 
			</view>
		</view> 
		
		<uni-list v-if="!showSearch" :border="false" :style="{'margin-bottom':tabbarHeight+'rpx'}">
			<uni-list-item @click="applyListPage" :showArrow="false" title="新的朋友" thumb="../../static/images/new_f.png"
			 thumbStyle="width:80rpx;height:80rpx;border-radius:10rpx" textStyle="font-weight:400;color:black" :badgeText="computedApplyCount"
			 :showBadge="computedApplyCount" badgeType="error" />
			<uni-list-item @click="groupListPage" :borderWidth="630" :showArrow="false" title="我的群聊" thumb="../../static/images/my_group.png"
			 thumbStyle="width:80rpx;height:80rpx;border-radius:10rpx" textStyle="font-weight:400;color:black" />
			<uni-list-item :borderWidth="630" :showArrow="false">
				<view class="user-box">
					<view class="slot-box">
						<image class="slot-image" :src="$store.state.user.utils.getImageCache(user.avatar)" mode="aspectFill"></image>
					</view>
					<text class="slot-text">{{user.nickname}}</text>
				</view>
			</uni-list-item>
			<!--  #ifdef  APP-PLUS -->
			<cell class="line"></cell>
			<!--  #endif -->
			<!--  #ifndef  APP-PLUS -->
			<view class="line"></view>
			<!--  #endif -->
			<uni-list-item :borderWidth="630" v-for="(item,index) in friendList" :key="index" :showArrow="false" @click="showCard(item._id)">
				<view class="user-box">
					<view class="slot-box">
						<image class="slot-image" :src="$store.state.user.utils.getImageCache(item.avatar)" mode="aspectFill"></image>
					</view>
					<text class="slot-text">{{$store.state.user.utils.getNickName(item._id,item.nickname)}}</text>
				</view>
			</uni-list-item>
		</uni-list>
		
		
		
		<view v-if="showSearch" class="nvue-page-search" ref="searchpanel" :style="'height: '+ searchPanelH +'rpx;background-color:#ededed;'">
			<view class="search-label" v-if="friendSearchResult.length">
				<text class="search-label-text">好友</text>
			</view>
			<uni-list :border="false" v-if="friendSearchResult.length">
				<!--  #ifdef  APP-PLUS -->
				<cell v-for="(item,index) in friendSearchResult">
					<!--  #endif -->
					<!--  #ifndef  APP-PLUS -->
					<view v-for="(item,index) in friendSearchResult">
						<!--  #endif -->
						<uni-list-chat :arrayIndex="index" :border="true" :title="$store.state.user.utils.getNickName(item._id,item.nickname)"
						 :avatar="$store.state.user.utils.getImageCache(item.avatar)" :clickable="true" badge-positon="left" @click="webSocket.chatWindow(item._id,item.nickname)">
						</uni-list-chat>
						<!--  #ifdef  APP-PLUS -->
				</cell>
				<!--  #endif -->
				<!--  #ifndef  APP-PLUS -->
		</view>
		<!--  #endif -->
		</uni-list>
		<view class="search-label" v-if="groupSearchResult.length">
			<text class="search-label-text">群聊</text>
		</view>
		<uni-list :border="false" v-if="groupSearchResult.length">
			<!--  #ifdef  APP-PLUS -->
			<cell v-for="(item,index) in groupSearchResult">
				<!--  #endif -->
				<!--  #ifndef  APP-PLUS -->
				<view v-for="(item,index) in groupSearchResult">
					<!--  #endif -->
					<uni-list-chat :arrayIndex="index" :avatarWidth="80" :border="true" :title="item.title" :group-id="item._id"
					 :clickable="true" badge-positon="left" @click="webSocket.chatGroupWindow(item._id,item.title)">
					</uni-list-chat>
					<!--  #ifdef  APP-PLUS -->
			</cell>
			<!--  #endif -->
			<!--  #ifndef  APP-PLUS -->
	</view>
	<!--  #endif -->
	</uni-list>
	</view>
	</view>
</template>

<script>
	import {
		mapState,
		mapMutations
	} from 'vuex'
	import searchAnimation from './searchAnimation.js'
	export default {
		data() {
			return {
				tabbarHeight: 0,
				applyCount: 0,
			}
		},
		mixins: [searchAnimation],
		computed: {
			...mapState({
				webSocket: state => state.user.webSocket,
				user: state => state.user.user,
				friendApply: state => state.user.friendApply,
				friendList: state => state.user.friendList,
				groupList: state => state.user.groupList,
			}),
			computedApplyCount() {
				let applyCount = 0;
				this.friendApply.forEach((item, index) => {
					if (item.status === 0) {
						applyCount++;
					}
				})
				return applyCount;
			}
		},
		onLoad() {

		},
		onShow() {
			uni.hideTabBarRedDot({
				index: 1
			});

		},
		onReady() {
			this.searchPanelH = (this.systemInfo.windowHeight - this.systemInfo.statusBarHeight - 36 - 12) * 2;
			this.tabbarHeight = this.systemInfo.windowBottom * 2;
		},
		onHide() {
			uni.hideKeyboard();
		},
		methods: {
			applyListPage: function() {
				uni.navigateTo({
					url: '/pages/contact/applyList',
				})
			},
			groupListPage: function() {
				uni.navigateTo({
					url: '/pages/contact/groupList',
				})
			},
			showCard: function(uid, type = 'search') {
				uni.showLoading();
				var that = this;
				uniCloud.callFunction({
					name: 'user',
					data: {
						$url: "getUserByUid",
						token: this.$store.state.user.user_token,
						data: {
							uid: uid
						}
					},
				}).then((res) => {
					uni.hideLoading();
					if (this.webSocket.checkResultData(res)) {
						uni.setStorageSync("cardUser", res.result.data[0]);
						uni.navigateTo({
							url: '/pages/contact/card?type=' + type
						})
					} else {
						uni.showToast({
							title: '该用户不存在',
							duration: 2000,
							icon: 'none'
						});
					}
				}).catch((err) => {
					console.log(err)
					uni.hideLoading()
					uni.showModal({
						title: '提示',
						content: err
					});
				})
			}
		}
	}
</script>

<style scoped>
	
	.fixedView {
		position: fixed;
		width: 750rpx;
		height: 60rpx;
		background-color: transparent;
	}

	.line {
		height: 40rpx;
		background-color: #ededed;
		width: 750rpx;
	}

	.nvue-page-head {
		background-color: #ededed;
	}

	.nvue-page-search {
		width: 750rpx;
	}

	.navbar {
		background-color: #ededed;
	}

	.user-box {
		flex-direction: row;
		align-items: center;
	}

	.search-label {
		padding: 20rpx;
		background-color: #ededed;
	}

	.search-label-text {
		font-size: 30rpx;
	}

	.slot-box {
		/* #ifndef APP-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
	}

	.slot-image {
		/* #ifndef APP-NVUE */
		display: block;
		/* #endif */
		margin-right: 20rpx;
		width: 80rpx;
		height: 80rpx;
		border-radius: 10rpx;
	}

	.slot-text {
		flex: 1;
		font-size: 34rpx;
		color: black;
		lines: 3;
		width: 500rpx;
		overflow: hidden;
		/* #ifndef APP-NVUE */
		word-wrap: break-word;
		/* #endif */
	}
</style>
