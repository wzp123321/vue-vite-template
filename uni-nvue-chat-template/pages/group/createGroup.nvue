<template>
	<view>
		<uni-nav-bar @clickLeft="$store.state.user.utils.back()" :leftIconBool="true" left-icon="back" :fixed="true"
		 :status-bar="true" rightText="开始" :rightIconBool="true" @clickRight="create" title="发起群聊" background-color="#ebebeb"
		 :moveRightBtn="true" titleStyle="font-size: 34rpx; font-weight: 500;"></uni-nav-bar>
		<!--  #ifdef  MP-WEIXIN -->
		<view class="button" @click="create()">
			<view class="submit">
				<text class="submit-text">确认</text>
			</view>
		</view>
		<!--  #endif -->
		<view :style="{'margin-top':marginTop+'px','height':height+'px','position':'absolute !important','width':'100%'}">
			<uni-create-indexed-list :options="friendListLetterSort" :showSelect="true" @click="bindClick"></uni-create-indexed-list>
		</view>

	</view>
</template>

<script>
	import {
		mapState,
		mapMutations
	} from 'vuex'
	export default {
		data() {
			return {
				selected: [],
				token: '',
				marginTop: 0,
				statusBarHeight: uni.getSystemInfoSync().statusBarHeight,
				height: uni.getSystemInfoSync().screenHeight - uni.getSystemInfoSync().statusBarHeight - 44
			}
		},
		computed: {
			...mapState({
				webSocket: state => state.user.webSocket,
				user: state => state.user.user,
				friendApply: state => state.user.friendApply,
				friendListLetterSort: state => state.user.friendListLetterSort
			}),
			top() {
				let top = uni.getSystemInfoSync().statusBarHeight + 44;
				return "top:" + top + "px;height:100%";
			}
		},
		onShow() {
			this.token = (new Date()).getTime();
			// #ifndef  APP-NVUE
			this.marginTop = uni.getSystemInfoSync().statusBarHeight + 44 + 44;
			// #endif
		},
		methods: {
			bindClick: function(e) {
				if (e.select != undefined) {
					this.selected = e.select;
				}
			},
			create: function() {
				var selected = [];
				var title = '';
				if (this.selected.length == 1) {
					this.webSocket.chatWindow(this.selected[0].name._id, this.selected[0].name.nickname)
					return;
				}
				if (this.selected.length < 1) {
					uni.showModal({
						title: '提示',
						content: "请选择要发起群聊的好友"
					});
					return;
				}
				this.selected.forEach((item, index) => {
					selected.push(item.name)

				})
				var me = {
					_id: this.user._id,
					username: this.user.username,
					nickname: this.user.nickname,
					avatar: this.user.avatar,
				}
				selected.push(me);
				title = this.selected[0].name.nickname + "，" + this.selected[1].name.nickname + "等人"
				if (selected.length > 200) {
					uni.showModal({
						title: '提示',
						content: "单个群聊人数不能超过200人"
					});
					return;
				}
				var group = {
					admin_id: this.user._id,
					admin: this.user,
					create_time: this.token,
					title: title
				};
				this.webSocket.addChatGroup(group, selected);
			},

		}
	}
</script>

<style scoped>
	.button {
		margin-top: 10rpx;
		justify-content: flex-start;
		align-items: flex-start
	}

	.submit {
		width:100rpx;
		background-color: #29c160;
		justify-content: flex-start;
		align-items: center;
		border-radius: 10rpx;
		margin-left: 10rpx;
		margin-right: 10rpx;
	}

	.submit-text {
		color: white;
		padding: 10rpx;
		font-size: 30rpx;
	}

	.submit:active {
		background-color: green;
		opacity: 0.5;
	}
</style>
