<template>
	<view>
		<uni-nav-bar :leftIconBool="true" @clickLeft="$store.state.user.utils.back()" left-icon="back" :fixed="true" :status-bar="true" title="聊天信息" :rightIconBool="true"></uni-nav-bar>
		 <view class="person-box">
			 <view class="persons">
				<view class="user-li" v-for="item in showUserList" @click="webSocket.showCard(item._id)">
					<image class="avatar" :src="$store.state.user.utils.getImageCache(item.avatar)" mode="aspectFill"></image>
					<text class="nickname">{{item.pet_name ? item.pet_name : item.nickname}}</text>
				</view>
				<view class="add" @click="invitation()">
					<uni-icons class="" style="color: #999999;" size="60" type="plusempty"></uni-icons>
				</view>
			 </view>
			 <view class="person-foot" style="">
			 	<text style="color: #999;font-size: 32rpx;">查看更多群成员</text>
			 </view>
		 </view>

		<view class="margin-bottom">
			<uni-list :bounce="false" :border="false">
				<uni-list-item @click="formPage('title',groupInfo.title,'设置群聊名称')" :textStyle="textStyle" title="群聊名称" :rightText="groupInfo.title"
				 :containerStyle="containerStyle" :rightTextStyle="rightTextStyle" />
				 
				<uni-list-item @click="formPage('notice',groupInfo.notice,'设置群公告')" :borderWidth="720" :textStyle="textStyle" title="群公告" :rightText="groupInfo.notice" :rightTextStyle="rightTextStyle" :containerStyle="containerStyle"
				 />
			</uni-list>
		</view>
	<!-- 	<view class="margin-bottom">
			<uni-list :bounce="false" :border="false">
				<uni-list-item :textStyle="textStyle" title="推荐给朋友" :containerStyle="containerStyle" />
			</uni-list>
		</view> -->
		
		<view class="margin-bottom">
			<uni-list :bounce="false" :border="false">
				<uni-list-item :textStyle="textStyle" title="消息免打扰" :containerStyle="containerStyle" :show-switch="true" :showArrow="false" />
			</uni-list>
			<uni-list :bounce="false" :border="false">
				<uni-list-item :textStyle="textStyle" title="设为特别关注" :containerStyle="containerStyle" :show-switch="true" :showArrow="false" />
			</uni-list>
		</view>
		
		<view class="margin-bottom">
			<uni-list :bounce="false" :border="false">
				<uni-list-item @click="formPage('petName',myPetName,'设置我在本群的昵称')" :borderWidth="720" :textStyle="textStyle" title="我在本群的昵称" :containerStyle="containerStyle" :rightText="myPetName" rightTextStyle="font-size:34rpx;font-weight:400;"
				 />
				<uni-list-item :textStyle="textStyle" title="显示群成员昵称" :containerStyle="containerStyle" :show-switch="true" :showArrow="false" />
			</uni-list>
		</view>
		
		<view>
			<view class="delete">
				<view class="button" @click="showPopup()">
					<text class="button-text">清空聊天记录</text>
				</view>
			</view>
			<view class="delete">
				<view class="button" @click="showPopup()">
					<text class="button-text">删除并退出</text>
				</view> 
			</view>
		</view>
		
		<uni-popup ref="popup" type="bottom">
			<view class="popup" :style="'padding-bottom:'+safeBottom+'rpx'">
				<view class="delPanel">
					<text class="deleted-text">将退出群组{{groupInfo.title}}，并且删除聊天记录</text>
				</view>
				<view class="delete">
					<view class="button" @click="outGroup()">
						<text class="button-text">确认退出</text>
					</view>
				</view>
				<view class="line">
				</view>
				<view class="delete">
					<view class="button" @click="hidePopup()">
						<text class="button-text" style="color: black;">取消</text>
					</view>
				</view>
			</view>
		</uni-popup>

	</view>
</template>

<script>
	import {
		mapState
	} from 'vuex'
	import md5 from "@/common/md5.js"
	export default {
		data() {
			return {
				containerStyle: 'margin-top:6px;margin-bottom:6px;margin-left:4px',
				rightTextStyle: 'font-size:34rpx;font-weight:400;width:400rpx;lines:3;overflow: hidden;text-overflow: ellipsis;word-break: break-word;text-align:right',
				textStyle: 'font-weight:400',
				systemInfo: uni.getSystemInfoSync(), 
				safeBottom:0,
				uid:'', 
				nickname:'',
				petName:'',
				sessionId:'',
				groupInfo:[],
				showUserList:[],
				myPetName:'',
			}
		},
		computed: {
			...mapState({
				user: state => state.user.user,
				webSocket: state => state.user.webSocket,
			})
		},
		onLoad(option) {
		 	console.log(this.systemInfo)
			this.safeBottom = this.systemInfo.safeAreaInsets.bottom * 2;
			this.sessionId = option.id;
			 
			if(this.$store.state.user.groupList.length){
				this.$store.state.user.groupList.forEach((item)=>{
					if(item._id == this.sessionId){
						this.groupInfo = item;
					}
				})
			}
			if(this.groupInfo.group_users){
				this.showUserList = this.groupInfo.group_users.slice(0,3);
				this.groupInfo.group_users.forEach((item)=>{
					if(item._id == this.user._id){
						if(item.pet_name){
							this.myPetName = item.pet_name;
						}
					}
				})
			}
			 
		},
		methods: {
			formPage: function(type, data, title) {
				uni.navigateTo({
					url: './form?id='+this.groupInfo._id+'&type=' + type + '&data=' + data + '&title=' + title
				})
			},
			invitation: function(){
				uni.navigateTo({
					url: './invitation?id='+this.groupInfo._id
				})
			},
			showPopup: function(){
				this.$refs.popup.open()
			},
			hidePopup: function(){
				this.$refs.popup.close()
			},
			outGroup: function(){
				var that = this;
				uni.showLoading();
				uniCloud.callFunction({
					name: 'user',
					data: {
						$url: "outGroup",
						token: this.$store.state.user.user_token,
						data: {
							user_id:this.user._id,
							group_id:this.sessionId
						}
						
					},
				}).then((res) => {
					try{
						
						let outGroup = {
							type:'outGroup',
							uid:this.user._id,
							groupId:this.sessionId
						};
						uni.sendSocketMessage({
							data: JSON.stringify(outGroup)
						})
						that.$store.dispatch('getGroupIds')
						let key = `chat_sessions_${that.user._id}`
						var chat_sessions = uni.getStorageSync(key);
						if(chat_sessions){
							chat_sessions.forEach((item,index)=>{
								if(item.id == that.sessionId){
									chat_sessions.splice(index, 1);
								}
							})
						}
						uni.setStorageSync(key, chat_sessions);
						let chatDetailKey = `chatDetail_${that.user._id}_${that.sessionId}`
						uni.setStorageSync(chatDetailKey, []);
						that.$store.dispatch('getSessionList')
						uni.hideLoading();
						uni.showModal({
						    title: '提示', 
						    content: '退出成功',
						    success: function (res) {
						        uni.reLaunch({
						        	url:"/pages/tabbar/session"
						        })
						    }
						});
						
					}catch(e){
						console.log(e)
					}
					 
				}).catch((err) => {
					uni.hideLoading()
					uni.showModal({
						title: '提示',
						content: err
					});
				})
			}
		}
	}
</script>

<style scoped>
	.slot-image {
		/* #ifndef APP-NVUE */
		display: block;
		/* #endif */
		margin-right: 10px;
		width: 50px;
		height: 50px;
		border-radius: 5px;
	}
	.delete {
		
		justify-content: center;
		align-items: center
	}
	.button:active{
		background-color: #f8f8f8;
	}
	.button {
		width: 750rpx;
		background-color: white;
		justify-content: center;
		align-items: center;
		border-radius: 10rpx;
	}
	
	.button-text {
		color: #fa5151;
		padding: 36rpx;
		font-size: 34rpx;
		font-weight: bold;
	}
	
	.margin-bottom{
		margin-bottom:10px;
	}
	
	.popup{
		width: 750rpx;
		background-color: white;
		border-top-left-radius:30rpx;
		border-top-right-radius:30rpx;
	}
	
	.delPanel{
		padding: 30rpx;
		justify-content: center;
		text-align: center;
		align-items: center;
		border-bottom-width: 1px;
		border-bottom-color: #f8f8f8;
	}
	.deleted-text{
		color: gray;
		font-size: 28rpx;
	}
	.person-box{
		background-color: #ffffff;
		margin-bottom: 20rpx;
		padding: 30rpx;
	}
	.persons{
		flex-direction: row;
	}
	.user-li{
		flex-direction: column;
		margin: 20rpx;
	}
	.avatar{
		width: 100rpx;
		height: 100rpx;
		border-radius: 10rpx;
	}
	.nickname{
		padding: 10rpx;
		color: #999;
		font-size: 30rpx;
		lines: 1;
		overflow: hidden;
		width: 100rpx;
		text-overflow: ellipsis;
		text-align: center;
	}
	.add{
		margin: 20rpx;
		width: 100rpx;
		height: 100rpx;
		border-width: 2rpx;
		border-style: dashed;
		border-color: #888888;
		border-radius: 10rpx;
		align-items: center;
		justify-content: center;
	}
	.person-foot{
		justify-content: center;
		align-items: center;
		margin:10rpx;
	}
</style>
